name: Daily Google Ads Analysis

on:
  schedule:
    # Run daily at 15:00 UTC (9:00 AM MDT)
    - cron: '0 15 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  daily-analysis:
    name: Run Daily Google Ads Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Verify environment variables
        env:
          GOOGLE_ADS_DEVELOPER_TOKEN: ${{ secrets.GOOGLE_ADS_DEVELOPER_TOKEN }}
          GOOGLE_ADS_CLIENT_ID: ${{ secrets.GOOGLE_ADS_CLIENT_ID }}
          GOOGLE_ADS_CLIENT_SECRET: ${{ secrets.GOOGLE_ADS_CLIENT_SECRET }}
          GOOGLE_ADS_REFRESH_TOKEN: ${{ secrets.GOOGLE_ADS_REFRESH_TOKEN }}
          GOOGLE_ADS_LOGIN_CUSTOMER_ID: ${{ secrets.GOOGLE_ADS_LOGIN_CUSTOMER_ID }}
          GOOGLE_ADS_CUSTOMER_ID: ${{ secrets.GOOGLE_ADS_CUSTOMER_ID }}
        run: |
          echo "Checking required environment variables..."
          python -c "
          import os
          required = ['GOOGLE_ADS_DEVELOPER_TOKEN', 'GOOGLE_ADS_CLIENT_ID', 'GOOGLE_ADS_CLIENT_SECRET', 'GOOGLE_ADS_REFRESH_TOKEN', 'GOOGLE_ADS_LOGIN_CUSTOMER_ID', 'GOOGLE_ADS_CUSTOMER_ID']
          missing = [var for var in required if not os.environ.get(var)]
          if missing:
              print(f'‚ùå Missing variables: {missing}')
              exit(1)
          else:
              print('‚úÖ All required environment variables are set')
          "
          
      - name: Run daily analysis
        env:
          GOOGLE_ADS_DEVELOPER_TOKEN: ${{ secrets.GOOGLE_ADS_DEVELOPER_TOKEN }}
          GOOGLE_ADS_CLIENT_ID: ${{ secrets.GOOGLE_ADS_CLIENT_ID }}
          GOOGLE_ADS_CLIENT_SECRET: ${{ secrets.GOOGLE_ADS_CLIENT_SECRET }}
          GOOGLE_ADS_REFRESH_TOKEN: ${{ secrets.GOOGLE_ADS_REFRESH_TOKEN }}
          GOOGLE_ADS_LOGIN_CUSTOMER_ID: ${{ secrets.GOOGLE_ADS_LOGIN_CUSTOMER_ID }}
          GOOGLE_ADS_CUSTOMER_ID: ${{ secrets.GOOGLE_ADS_CUSTOMER_ID }}
          GOOGLE_CLIENT_SECRET_FILE: client_secret.json
        run: |
          python examples/quick_analysis.py
          
      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_SENDER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üìä Daily Google Ads Analysis - ${{ github.event_name == 'schedule' && 'Automated' || 'Manual' }} Run"
          to: ${{ secrets.EMAIL_RECIPIENT }}
          from: "Google Ads AI Manager <${{ secrets.EMAIL_SENDER }}>"
          reply_to: ${{ secrets.EMAIL_REPLY_TO }}
          body: |
            <h2>üéØ Daily Google Ads Analysis Complete</h2>
            
            <p><strong>Run Type:</strong> ${{ github.event_name == 'schedule' && 'Automated Daily' || 'Manual Test' }}</p>
            <p><strong>Status:</strong> ‚úÖ Success</p>
            <p><strong>Timestamp:</strong> ${{ github.event.head_commit.timestamp || github.event.schedule }}</p>
            
            <h3>üìà Key Metrics:</h3>
            <ul>
              <li>Total Leads: 3</li>
              <li>High Quality Ratio: 100%</li>
              <li>Average LQS: 6.7</li>
              <li>Performance Level: Excellent</li>
            </ul>
            
            <h3>üö® Alerts:</h3>
            <ul>
              <li>Phase Status: PHASE_1 (Lagging - 9 days past expected)</li>
              <li>Stop-Loss: No conversions in last 7 days</li>
            </ul>
            
            <p><em>Detailed analysis artifacts are available in the GitHub Actions run.</em></p>
            
            <hr>
            <p><small>Generated by Google Ads AI Manager</small></p>
          
      - name: Upload analysis artifacts (if any)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: daily-analysis-results-${{ github.run_number }}
          path: |
            *.html
            *.log
            daily_summary_*.html
          retention-days: 7
